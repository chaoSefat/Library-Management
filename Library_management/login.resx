<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/2wBD
        AAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0M
        DgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAz/wAARCACHAIcDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQF
        BgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAk
        M2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx
        8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQA
        AQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5
        OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmq
        srO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9
        /K5X4wfF7Q/gh4Fv/EXiC4kt9PsFBIjjMk07n7scaDl3Y8AD3JIAJHVV8D/8FuvGWqaBoHhuGxRpFt7K
        +v4kBOHuB5Uasf8AdVjz1AY+tbUKfPNRM6kuWNzm9T/4KBfGX9oTx9NH4bjh8C+E4ZAY7bS9El8Qa3Mn
        TM8qssMGfSMOR0yTmvfP+F0CLwlZQaf488QWPiWRQDBq6RwtcnPO2KeFiMj+6CPepv2Xf2iND0r9mDwD
        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
        BRRRQB//2Q==
</value>
  </data>
</root>